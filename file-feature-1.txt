ЗАЧЕМ НАМ НУЖНЫ ВЕРСИИ КОДА?

Представьте, что вы пишете какой-нибудь документ и сохраняете его с названием . Проходит некоторое время и вы сохраняете документ_черновик_финал.doc. Дело вполне может закончиться рождением монстра документ_черновик_финал_проверено_в_печать.doc. Каждый из этих файлов — это определённая версия документа. 

Но при наличии определённого инструментария вы можете отменить почти любое изменение в файле (в определённом порядке, чаще всего в линейном). Вы можете сравнить содержимое этих двух файлов вплоть до тонкостей оформления. 

Когда вы будете передавать этот документ на правки кому-нибудь ещё, то вы можете сравнить то, что получаете обратно, с тем, что сделали сами.

То же самое применимо и к программному коду. Изменения в кодовой базе могут происходить очень часто. Чем больше людей участвует в разработке, тем больше изменений происходит. 

Благодаря версионированию вы можете сравнивать разные версии кода, получать изменения от других пользователей и передавать им свои. 

ЧТО ТАКОЕ ВЕРСИИ ПРОГРАММНОГО КОДА?

Определённый набор изменений и является, в некотором смысле, версией кода. Когда вы закрепляете этот набор изменений в СКВ, то формируете версию кода, которой можете полноценно манипулировать

Очень распространённой альтернативой словосочетанию «версия кода» является термин «набор изменений», или слово коммит (от англ. commit).

